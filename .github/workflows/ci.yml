# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:

  
  # ---------------------------------------------------------------------
  # prelims
  # ---------------------------------------------------------------------
  style-check:
    runs-on: ubuntu-latest
    steps:
      - name: Run minimum test suite
        run: echo "style check"
        
  # ---------------------------------------------------------------------
  # linux
  # ---------------------------------------------------------------------

  build-linux:
    runs-on: ubuntu-latest
    needs: style-check
    steps:
      - uses: actions/checkout@v2
      - name: Install nim dependencies
        run: |
          wget -qO - https://nim-lang.org/choosenim/init.sh > setup_nim.sh
          sh setup_nim.sh -y
      - name: Build library
        run: PATH=/home/runner/.nimble/bin:$PATH ./build.sh
      - uses: actions/upload-artifact@v2
        with:
         name: nmusd-build-linux-artifacts
         path: |
          ./*.sh
          deps/usd/build/inst/lib/
          ./bin/
          ./data/
        
  test-linux:
    needs: build-linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: nmusd-build-linux-artifacts
          path: ~/nmusd/
      - name: Run minimum test suite (platform - linux)
        run: sudo chmod -R +rwx /home/runner/nmusd && cd /home/runner/nmusd && sudo sh ./run.sh
  
  bench-linux:
    needs: build-linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: nmusd-build-linux-artifacts
          path: ~/nmusd/
      - name: Run minimum benchmark suite (platform - linux)
        run: sudo chmod -R +rwx /home/runner/nmusd && cd /home/runner/nmusd && sudo sh ./run.sh
        
        
  # ---------------------------------------------------------------------
  # macos
  # ---------------------------------------------------------------------

  build-macos:
    runs-on: macos-11
    needs: style-check
    steps:
      - uses: actions/checkout@v2
      - name: Install nim dependencies
        run: |
          wget -qO - https://nim-lang.org/choosenim/init.sh > setup_nim.sh
          sh setup_nim.sh -y
      - name: Build library
        run: PATH=/Users/runner/.nimble/bin:$PATH ./build.sh
      - uses: actions/upload-artifact@v2
        with:
         name: nmusd-build-macos-artifacts
         path: |
          ./*.sh
          deps/usd/build/inst/lib/
          ./bin/
          ./data/
  
  test-macos:
    needs: build-macos
    runs-on: macos-11
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: nmusd-build-macos-artifacts
          path: ~/nmusd/
      - name: Run minimum test suite (platform - macos)
        run: echo "Placeholder"
     
  bench-macos:
    needs: build-macos
    runs-on: macos-11
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: nmusd-build-macos-artifacts
          path: ~/nmusd/
      - name: Run minimum benchmark suite (platform - macos)
        run: echo "Placeholder"

  # ---------------------------------------------------------------------
  # windows
  # ---------------------------------------------------------------------
  
  build-windows:
    runs-on: windows-2019
    needs: style-check
    steps:
      - uses: actions/checkout@v2
      - uses: microsoft/setup-msbuild@v1.0.2
      - name: Install nim dependencies
        shell: bash
        run: |
          curl -kLSs https://nim-lang.org/choosenim/init.sh -o setup_nim.sh
          sh setup_nim.sh -y
      - name: Build library 
        shell: bash
        run: PATH=/home/runner/.nimble/bin:$PATH ./build.sh
  
  # ---------------------------------------------------------------------
  # docker
  # ---------------------------------------------------------------------
          
  build-docker:
    runs-on: ubuntu-latest
    needs: style-check
    steps:
      - uses: actions/checkout@v2
      - name: Build container
        run: docker build -t nmusd_env .
      - name: Tar container
        run: docker save nmusd_env > nmusd_env.tar
      - uses: actions/upload-artifact@v2
        with:
         name: nmusd-build-docker-artifacts
         path: nmusd_env.tar

  test-docker:
    needs: build-docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: nmusd-build-docker-artifacts
          path: ~/nmusd/
      - name: Run minimum test suite (platform - docker)
        run: echo "Placeholder"

  bench-docker:
    needs: build-docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: nmusd-build-docker-artifacts
          path: ~/nmusd/
      - name: Run minimum benchmark suite (platform - docker)
        run: echo "Placeholder"
  

  # ---------------------------------------------------------------------
  # universal
  # ---------------------------------------------------------------------
  
  fuzz-check:
    needs: [bench-linux, test-linux, bench-macos, test-macos, bench-docker, test-docker]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: nmusd-build-linux-artifacts
          path: ~/nmusd/
      - name: Run fuzzer 
        run: echo "Hello, placeholder"
  
  mutate-check:
    needs: [bench-linux, test-linux, bench-macos, test-macos, bench-docker, test-docker]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: nmusd-build-linux-artifacts
          path: ~/nmusd/
      - name: Run mutation testing 
        run: echo "Hello, placeholder"
  
  coverage-check:
    needs: [bench-linux, test-linux, bench-macos, test-macos, bench-docker, test-docker]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: nmusd-build-linux-artifacts
          path: ~/nmusd/
      - name: Run coverage checking 
        run: echo "Hello, placeholder"
  
  nimble:
    runs-on: ubuntu-latest
    needs: [fuzz-check, mutate-check, coverage-check]
    steps:
      - uses: actions/checkout@v2
      - name: Assemble nimble package
        run: echo "Placeholder"

  docs:
    runs-on: ubuntu-latest
    needs: [fuzz-check, mutate-check, coverage-check]
    steps:
      - uses: actions/checkout@v2
      - name: Generate docs
        run: echo "Placeholder"
